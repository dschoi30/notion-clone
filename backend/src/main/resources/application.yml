spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jackson:
    time-zone: Asia/Seoul
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: Asia/Seoul
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

logging:
  level:
    # 개발 환경에서는 상세 로그, 프로덕션에서는 WARN 이상만
    org.springframework.security: ${LOG_LEVEL_SECURITY:TRACE}
    com.example.notionclone: ${LOG_LEVEL_APP:DEBUG}
    org.hibernate.orm.jdbc.bind: ${LOG_LEVEL_HIBERNATE:TRACE}
    # 프로덕션 환경에서 과도한 로깅 방지
    com.example.notionclone.security.JwtAuthenticationFilter: ${LOG_LEVEL_JWT_FILTER:DEBUG}
    com.example.notionclone.domain.user.service.AuthService: ${LOG_LEVEL_AUTH_SERVICE:DEBUG}
  pattern:
    # 프로덕션에서는 간단한 로그 포맷 사용
    console: ${LOG_PATTERN:%-5level [%thread] %logger{36} - %msg%n}

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION}

google:
  client:
    id: ${GOOGLE_CLIENT_ID}

cloudinary:
  cloud_name: ${CLOUDINARY_CLOUD_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}
  upload_preset: ${CLOUDINARY_UPLOAD_PRESET}

server:
  port: 8080
  servlet:
    context-path: /